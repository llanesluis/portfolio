---
import { SOCIALS } from "../../constants/socials";
import SiteHeader from "../SiteHeader.astro";
import TagCodeBlock from "../TagCodeBlock";
import Technologies from "../Technologies.astro";
import ExternalLink from "../global/ExternalLink.astro";
import Highlight from "../global/Highlight.astro";
import Section from "../global/Section.astro";
import TypingAnimatedText from "../global/TypingAnimatedText.astro";
import GitHub from "../icons/GitHub.astro";
import LinkedIn from "../icons/LinkedIn.astro";
import Mail from "../icons/Mail.astro";

const typingTextTitle = "frontend developer";
---

<section
  id="nav"
  class="sticky inset-x-0 top-6 z-50 opacity-0 transition duration-200 will-change-transform"
>
  <SiteHeader transition:name="header" />
</section>

<Section class="font-accent" id="hero">
  <div id="intersection">
    <header
      id="header"
      class="transition-transform duration-150 will-change-transform"
    >
      <TypingAnimatedText
        text={typingTextTitle}
        class="bg-accent-gradient bg-clip-text text-xl font-semibold text-transparent md:text-2xl"
      />

      <h1 class="typing-text relative text-7xl font-bold max-md:text-6xl">
        hi, i'm luis;
        <span class="sr-only"
          >Luis Fernando Llanes Bojorquez | Web Developer</span
        >
      </h1>

      <nav
        class:list={[
          "mb-8 mt-2 flex items-center gap-4 pl-1 font-accent lowercase",
          "md:mb-12 md:gap-8 md:text-lg",
        ]}
      >
        <ExternalLink href={SOCIALS.linkedin} title={"LinkedIn"} icon>
          <span>LinkedIn</span>
        </ExternalLink>

        <ExternalLink href={SOCIALS.github} title={"GitHub"} icon>
          <span>GitHub</span>
        </ExternalLink>

        <ExternalLink href={SOCIALS.email} title={"Email"} icon>
          <span>E-mail me</span>
        </ExternalLink>
      </nav>

      <TagCodeBlock
        label="Details"
        client:idle
        status="availableNow"
        className="text-2xl"
      >
        <div class="flex flex-col gap-2">
          <h2 class="text-xl">
            I'm a Software Engineer & <Highlight>Web Developer</Highlight>
          </h2>

          <p class="text-muted-foreground">
            <Highlight class="font-semibold text-accent"> 2</Highlight> years building
            with web technologies, both <Highlight>front-end</Highlight> and <Highlight
              >back-end.</Highlight
            > Continuously learning new tools and frameworks.
          </p>
        </div>

        <div class="relative w-full pt-12">
          <TagCodeBlock
            label="TechStack"
            client:idle
            className="text-2xl"
            expanded={false}
          >
            <Technologies />
          </TagCodeBlock>
        </div>
      </TagCodeBlock>
    </header>
  </div>
</Section>
<!-- Extra space to give the header room to show up -->
<div class="h-14 md:h-10"></div>

<style>
  .gradient-text {
    background: var(--accent-gradient);
    color: transparent;
    background-clip: text;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const intersectionRef = document.getElementById("intersection");
    const header = document.getElementById("header");
    const nav = document.getElementById("nav");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (!entry.isIntersecting) {
            header?.classList.add("-translate-y-2", "scale-95", "opacity-0");
            header?.classList.remove("opacity-100");

            nav?.classList.remove(
              "-translate-y-2",
              "scale-[0.95]",
              "opacity-0",
            );
            nav?.classList.add("opacity-100");
          } else {
            header?.classList.remove("-translate-y-2", "scale-95", "opacity-0");
            header?.classList.add("opacity-100");

            nav?.classList.add("-translate-y-2", "scale-[0.95]", "opacity-0");
            nav?.classList.remove("opacity-100");
          }
        });
      },
      {
        root: null,
        rootMargin: "-100px",
      },
    );

    if (intersectionRef) {
      observer.observe(intersectionRef);
    }
  });
</script>
