---
import ExternalLink from "../global/ExternalLink.astro";
import GlassContainer from "../global/GlassContainer.astro";
import GradientText from "../global/GradientText.astro";
import SiteHeader from "../SiteHeader.astro";
import Technologies from "../Technologies.astro";
import GitHub from "../icons/GitHub.astro";
import LinkedIn from "../icons/LinkedIn.astro";
import Mail from "../icons/Mail.astro";
import Highlight from "../global/Highlight.astro";
import Section from "../global/Section.astro";
import { SOCIALS } from "../../constants/socials";
import TagCodeBlock from "../TagCodeBlock";
---

<section
  id="nav"
  class="sticky inset-x-0 top-6 z-50 opacity-0 transition duration-200 will-change-transform"
>
  <SiteHeader transition:name="header" />
</section>

<Section class="font-accent" id="hero">
  <div id="intersection">
    <header
      id="header"
      class="transition-transform duration-150 will-change-transform"
    >
      <h1
        class="typing-text relative mb-12 text-7xl font-bold max-md:text-6xl md:mb-16"
      >
        hi, i'm luis
        <span class="sr-only"
          >Luis Fernando Llanes Bojorquez | Web Developer</span
        >
      </h1>

      <TagCodeBlock
        label="Details"
        client:idle
        status="availableNow"
        className="text-3xl"
      >
        <article class="flex flex-col gap-8">
          <div class="flex flex-col gap-2">
            <h2 class="text-xl">
              I'm a Software Engineer & <Highlight>Web Developer</Highlight>
            </h2>

            <p class="text-muted-foreground">
              <Highlight class="font-semibold text-accent">1.5+</Highlight> years
              building with web technologies, both <Highlight
                >front-end</Highlight
              > and <Highlight>back-end.</Highlight> Continuously evolving and learning
              new stuff.
            </p>
          </div>

          <nav class="flex items-center gap-4">
            <ExternalLink href={SOCIALS.linkedin} title={"LinkedIn"}>
              <LinkedIn class="size-6" />
            </ExternalLink>

            <ExternalLink href={SOCIALS.github} title={"GitHub"}>
              <GitHub class="size-6" />
            </ExternalLink>

            <ExternalLink href={SOCIALS.email} title={"Email"}>
              <Mail class="size-4" />
            </ExternalLink>
          </nav>
        </article>

        <div class="relative w-full pt-12">
          <Technologies />
        </div>
      </TagCodeBlock>
    </header>
  </div>
</Section>
<!-- Extra space to give the header room to show up -->
<div class="h-14 md:h-10"></div>

<style>
  .typing-text::after {
    position: absolute;
    bottom: 0;
    left: 0;
    transform: translateY(100%);

    content: "";
    background: var(--accent-gradient);
    color: transparent;
    background-clip: text;

    font-size: 0.3em;
    font-weight: 500;
    animation: typing-text 2s forwards;
    animation-delay: 0.1s;
  }

  @keyframes typing-text {
    0% {
      content: "";
    }
    5% {
      content: "f";
    }
    10% {
      content: "fr";
    }
    15% {
      content: "fro";
    }
    20% {
      content: "fron";
    }
    25% {
      content: "front";
    }
    30% {
      content: "fronte";
    }
    35% {
      content: "fronten";
    }
    40% {
      content: "frontend";
    }
    45% {
      content: "frontend ";
    }
    50% {
      content: "frontend d";
    }
    55% {
      content: "frontend de";
    }
    60% {
      content: "frontend dev";
    }
    65% {
      content: "frontend deve";
    }
    70% {
      content: "frontend devel";
    }
    75% {
      content: "frontend develo";
    }
    80% {
      content: "frontend develop";
    }
    85% {
      content: "frontend develope";
    }
    90% {
      content: "frontend developer";
    }
    100% {
      content: "frontend developer";
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const intersectionRef = document.getElementById("intersection");
    const header = document.getElementById("header");
    const nav = document.getElementById("nav");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (!entry.isIntersecting) {
            header?.classList.add("-translate-y-2", "scale-95", "opacity-0");
            header?.classList.remove("opacity-100");

            nav?.classList.remove(
              "-translate-y-2",
              "scale-[0.95]",
              "opacity-0",
            );
            nav?.classList.add("opacity-100");
          } else {
            header?.classList.remove("-translate-y-2", "scale-95", "opacity-0");
            header?.classList.add("opacity-100");

            nav?.classList.add("-translate-y-2", "scale-[0.95]", "opacity-0");
            nav?.classList.remove("opacity-100");
          }
        });
      },
      {
        root: null,
        rootMargin: "-100px",
      },
    );

    if (intersectionRef) {
      observer.observe(intersectionRef);
    }
  });
</script>
